name: Build & Publish to GHCR

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]     # publish versioned images on tags like v1.2.3
  release:
    types: [published] # also publish when a release is published
  workflow_dispatch:    # allow manual runs

permissions:
  contents: read
  packages: write

concurrency:
  group: ghcr-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    name: Build & Push Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      # Lowercase owner for ghcr (required)
      - name: Compute lowercase owner
        id: lc
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ steps.lc.outputs.owner_lc }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate tags and labels automatically from refs (branch, tag, SHA)
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: |
            ghcr.io/${{ steps.lc.outputs.owner_lc }}/drill-server
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=ref,event=branch
            type=sha

      # Build & push multi-arch image using your Dockerfile at repo root
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        env:
          BUILDKIT_PROGRESS: plain
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' || startsWith(github.ref, 'refs/tags/') || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_COMMIT=${{ github.sha }}
            BUILD_DATE=${{ github.event.pushed_at || github.run_started_at }}
